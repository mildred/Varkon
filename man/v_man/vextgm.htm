<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head><title>Extracting result from GM</title>
  
  <meta name="GENERATOR" content="Mozilla/3.01Gold (X11; I; Linux 2.0.29 i586) [Netscape]"></head>

<body bgcolor="#99ccff">
<center>
<p><font size="-1">VARKON Version 1.18 2006-03-16</font></p>
</center>
<p>
</p>
<hr align="center" width="100%">
<p></p>
<ul>
  <h3>Extracting result from the DB<br>
  </h3>
  <p>Let's design a very simple wheel and see how it works. Our wheel
consists
of a 50 millimeter fixed size hub, a variable size rim and a variable
number
of spokes. For the hub and rim we can use the following modules.....</p>
  <pre>DRAWING MODULE hub_50();                DRAWING MODULE rim(FLOAT size);<br><br>BEGINMODULE                             BEGINMODULE</pre>
  <pre>  arc_1pos(#1,vec(0,0),25);               arc_1pos(#1,vec(0,0),size/2);<br><br>ENDMODULE                               ENDMODULE</pre>
  <p>and for a variable size wheel with a variable number of spokes.....</p>
  <pre>DRAWING MODULE wheel(FLOAT size; INT nspokes);<br><br>BEGINMODULE<br><br>  part(#1,hub_50());<br>  part(#2,rim(size));<br><br>  for i:=1 to nspokes do<br>    lin_free(#3,on(#1#1,i/nspokes),on(#2#1,i/nspokes));<br>  endfor;<br><br>ENDMODULE</pre>
  <p>Suppose now that VARKON evaluates wheel for size=600 and
nspokes=30.
The result stored in the geometric database will be a hub_50 (#1), a
rim (#2)
and 30 lines (#3.1,#3.2,#3.3,.........#3.30). To extract infromation
about
a specific entity we must know its identity....<br>
  <br>
get_arc(#1#1,arcfont,daslength,p1,r,v1,v2); ! Returns arc data of hub_50<br>
get_lin(#3.20,linfont,dashlength,p1,p2); ! Returns line data for spoke
20<br>
size:=get_flt(#2,1); ! Returns rim parameter = 600<br>
  <br>
MBS includes specific get-routines for all types of enteties including
parts and their parameters. If you dont know the identity of an entity
you can searh using...<br>
  <br>
identity:=get_next_gm(mode,type,part_name,member_in_group_with_name);<br>
  <br>
This routine returns the next entity that matches type and/or optional
name and/or optional group if traversing the DB-tree in the direction
of
mode (horisontal/vertical). Type can be any combination of types and
names
can be given using wildcards. If you want to limit a search to a
specific
part of the DB you can set your own root position using...<br>
  <br>
set_root_gm(root_id);<br>
  <br>
A set_root_gm to #2 with a following get_next_gm of any entity would
return
#2#1 which is the arc representing the rim in our example. A
set_root_gm
to the top of wheel and a following get_next_gm of any part with name =
hub* would return #1 which is the identity of hub_50.</p>
</ul>
<p>
</p>
<hr align="center" width="100%">
<p></p>
<p></p>
<center>
<table cellpadding="0" cellspacing="10">
  <tbody>
    <tr>
      <td><a href="http://www.tech.oru.se/cad/varkon/index.htm">VARKON Homepage</a></td>
      <td><a href="http://www.tech.oru.se/cad/varkon/v_man/vindex.htm">Index</a></td>
    </tr>
  </tbody>
</table>
</center>
</body></html>
