changequote({,})
define({_TITLE_},{Varkon MBS Programmers manual})
define({_SUBTITLE_},{- ival - Function})
define({_INDEXLINK_},{<a href="striindx.htm">index</a>})
define({_STYLE_},{../varkonstyle.css})
include(../../include/header.inc)

<h1>ival - Function</h1>

<h2>Description</h2>

<p>
Converts a string of characters to an integer value. Leading blanks
are ignored but counted together with the number of characters
used for conversion. If conversion is not possible a value of zero is returned.
</p>

<h2>Syntax</h2>

<pre>
  i:=ival(s, status, nchars);

  int    i;
  string s;
  int    status;
  int    nchars;
</pre>

<h2>Principal parameters</h2>

<table>
<tr>
<td>s</td>
<td>- The string to convert.</td>
</tr>
</table>

<h2>Optional parameters</h2>

<table>
<tr>
<td>status</td>
<td>- 0 =&gt; Conversion succsessful, -1 =&gt; No conversion
possible.
</td>
</tr>
<tr>
<td>nchars</td>
<td>- Number of characters used for conversion.</td>
</table>

<h2>Return value</h2>

<p>
An INT value equal to the converted integer or zero if conversion was
not successful.
</p>

<h2>Examples</h2>

<pre>
  i:=ival(&quot; -12345 &quot;);            ! Returns i = -12345

  i:=ival(&quot; ABC &quot;);               ! Returns zero

  i:=ival(&quot;12345&quot;,status);        ! Retuns i = 12345 and status = 0

  i:=ival(&quot;ABC&quot;,status);          ! Returns i = 0 and status = -1

  i:=ival(&quot;12345 ABC&quot;,status,n);  ! Returns i = 12345, status = 0 and n = 5
</pre>

<h2>See also</h2>

<a href="fval.htm">fval()</a>,
<a href="rval.htm">rval()</a>

include(../../include/svnversion.inc)
include(../../include/footer.inc)
