changequote({,})
define({_TITLE_},{Varkon MBS Programmers manual})
define({_SUBTITLE_},{- fval - Function})
define({_INDEXLINK_},{<a href="striindx.htm">index</a>})
define({_STYLE_},{../varkonstyle.css})
include(../../include/header.inc)

<h1>fval - Function</h1>

<h2>Description</h2>

<p>
Converts a string of characters to a float value. Leading blanks
are ignored but counted together with the number of characters
used for conversion. If conversion is not possible a value of zero is returned.
</p>

<h2>Syntax</h2>

<pre>
  f:=fval(s, status, nchars);

  float  f;
  string s;
  int    status;
  int    nchars;
</pre>

<h2>Principal parameters</h2>

<table>
<tr>
<td>s</td>
<td>- The string to convert.</td>
</tr>
</table>

<h2>Optional parameters</h2>

<table>
<tr>
<td>status</td>
<td>- 0 =&gt; Conversion succsessful, -1 =&gt; No conversion
possible.
</td>
</tr>
<tr>
<td>nchars</td>
<td>- Number of characters used for conversion.</td>
</table>

<h2>Return value</h2>

<p>
A FLOAT value equal to the converted float or zero if conversion was
not successful.
</p>

<h2>Examples</h2>

<pre>
  f:=fval(&quot; -12345 &quot;);            ! Returns f = -12345.0

  f:=fval(&quot; ABC &quot;);               ! Returns 0.0

  f:=fval(&quot;1.2E3&quot;,status);        ! Retuns f = 1200.0 and status = 0

  f:=fval(&quot;ABC&quot;,status);          ! Returns f = 0.0 and status = -1

  f:=fval(&quot;1.2e-3 ABC&quot;,status,n); ! Returns f = 0.0012, status = 0 and n = 6
</pre>

<h2>See also</h2>

<a href="ival.htm">ival()</a>,
<a href="rval.htm">rval()</a>

include(../../include/svnversion.inc)
include(../../include/footer.inc)
