changequote({,})
define({_TITLE_},{Varkon MBS Programmers manual})
define({_SUBTITLE_},{- csys_1p - Geometric procedure})
define({_INDEXLINK_},{<a href="entiindx.htm">index</a>})
define({_STYLE_},{../varkonstyle.css})
include(../../include/header.inc)

<h1>csys_1p - <small>Geometric procedure</small></h1>
  
<h2>Description</h2>
  
<p>
Creates a local coordinate system using one position and three optional angles of
rotation.
</p>

<h2>Syntax</h2>
<pre>
  csys_1p(id, name, p, rotx, roty, rotz:attributes);
</pre>
 
<table>
<tbody><tr>
<td>REF</td>
<td>id;</td>
</tr>
<tr>
<td>STRING</td>
<td>name*10;</td>
</tr>
<tr>
<td >VECTOR</td>
<td>p;</td>
</tr>
<tr>
<td>FLOAT</td>
<td>rotx;</td>
</tr>
<tr>
<td>FLOAT</td>
<td>roty;</td>
</tr>
<tr>
<td>FLOAT</td>
<td>rotz;</td>
</tr>
</tbody>
</table>
  
<h2>Principal parameters</h2>

<table>
<tbody><tr>
<td>id </td>
<td>- Local identity</td>
</tr>
<tr>
<td>name</td>
<td>- User defined name</td>
</tr>
<tr>
<td>p</td>
<td>- Position of origin</td>
</tr>
</tbody>
</table>

<h2>Optional parameters</h2>

<table>
<tbody><tr>
<td>rotx</td>
<td>- Rotation around X-axis, default = 0</td>
</tr>
<tr>
<td>roty</td>
<td>- Rotation around Y-axis, default = 0</td>
</tr>
<tr>
<td>rotz</td>
<td>- Rotation around Z-axis, default = 0</td>
</tr>
</tbody>
</table>

<h2>Attributes</h2>

<table>
<tbody><tr>
<td>PEN </td>
<td>- Pen or colour number</td>
</tr>
<tr>
<td>LEVEL</td>
<td>- Level number</td>
</tr>
<tr>
<td>BLANK</td>
<td>- Visible(0) or invisible(1)</td>
</tr>
</tbody>
</table>
 
<h2>Example-1</h2>
<pre>
csys_1p(#1,"Origin",vec(0,0), , ,30);
</pre>
<p>
Creates a coordinate system rotated 30 degrees around the active Z-axis.
</p>
  
<h2>Example-2</h2> 
<pre class="box"> 
BASIC GEOMETRY MODULE coor_sys();   
 BEGINMODULE
   csys_1p(#1,"BASIC", vec(0, 0, 0), 0.0, 0.0, 0.0);
   csys_1p(#2,"ROTATED", vec(1, 0, 0), 0.0, 0.0, 0.0);
   mode_local(#2);
 ENDMODULE  
</pre>  
<p>    
This module creates two coordinate systems, the first as a Basic "Reference" coordinate system with Origin at point (0,0,0)  without any rotation around the Axes , The second is a Local coordinate system  with Origin at point (1,0,0), also without any rotation as in figure 1. <br> To illustrate how the coordinate system works, we will use the second coordinate system with diferent orientations in following examples.
</p> 

<img src="images/coor_sys_1.png"></img>
<p class="caption"> Figure 1 </p>

<p>
In figure 1 the two coordinate  systems had  the  same  orientation for   
all Axes. To rotate the second coordinate system 90 degrees around  X-axis, use the module listed below. The result is shown in figure 2. 
</p> 

<pre class="box"> 
BASIC GEOMETRY MODULE coor_sys();
 BEGINMODULE
   csys_1p(#1,"BASIC", vec(0, 0, 0), 0.0, 0.0, 0.0);
   csys_1p(#2,"ROTATED", vec(1, 0, 0), 90.0, 0.0, 0.0);
   mode_local(#2);
 ENDMODULE
</pre> 

<img class="center" src="images/coor_sys_2.png"></img>
<p class="caption"> Figure 2 </p>

<p>
To therafter rotate the local coordinate system 90 degrees around Y-axis, use the module listed below. The result is shown in figure 3.
</p>
<pre class="box">
  BASIC GEOMETRY MODULE coor_sys();
    BEGINMODULE
      csys_1p(#1,"BASIC", vec(0, 0, 0), 0.0, 0.0, 0.0);
      mode_local(#1);
      csys_1p(#2,"ROTATED", vec(1, 0, 0), 90, 0, 0:BLANK=1);
      mode_local(#2);
      csys_1p(#3,"ROTATED", vec(0, 0, 0), 0, 90, 0:BLANK=0);
      mode_local(#3);
    ENDMODULE
</pre>

<img class="center" src="images/coor_sys_3.png"></img>
<p class="caption"> Figure 3 </p>

<p>
Finally to rotate the local coordinate system also 90 degrees around Z-axis, use the module listed below .The result is shown in fingure 4.
</p>

<pre class="box">
  BASIC GEOMETRY MODULE coor_sys();
    BEGINMODULE
      csys_1p(#1,"BASIC", vec(0, 0, 0), 0.0, 0.0, 0.0);
      mode_local(#1);
      csys_1p(#2,"ROTATED", vec(1, 0, 0), 90, 0, 0:BLANK=1);
      mode_local(#2);
      csys_1p(#3,"ROTATED", vec(0, 0, 0), 0, 90, 0:BLANK=1);
      mode_local(#3);
      csys_1p(#4,"ROTATED", vec(0, 0, 0), 0, 0, 90:BLANK=0);
      mode_local(#4);
    ENDMODULE
</pre>

<img class="center" src="images/coor_sys_4.png"></img>
<p class="caption"> Figure 4 </p>

<h2>Comments</h2>
<p>
In the last three active modules and figures  specified rotation is done in three steps around local coordinate system , the first around the X-axis  ,Then around Y-axis, the last around Z-axis. When all three angles are specified in one csys_1p-instruction, varkon calculates the rotaion in order X,Y,Z. To confirm this investigate the module listed below . The result is shown in figure 5.
</p>

<pre class="box">
BASIC GEOMETRY MODULE coor_sys();
  BEGINMODULE
    csys_1p(#1,"BASIC", vec(0, 0, 0), 0.0, 0.0, 0.0);
    mode_local(#1);
    csys_1p(#2,"ROTATED", vec(1, 0, 0), 90, 90, 90);
    mode_local(#2);
  ENDMODULE
</pre>

<img class="center" src="images/coor_sys_4.png"></img>
<p class="caption"> Figure 5 </p>

<h2>See also</h2>

<p>
<a href="csys_usrdef.htm">csys_usrdef()</a> and
<a href="csys_3p.htm">csys_3p()</a>
</p>
  
include(../../include/svnversion.inc)
include(../../include/footer.inc)
