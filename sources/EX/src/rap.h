/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RAP_H_RPCGEN
#define _RAP_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef u_char RAP_BYTE_TYPE;

typedef u_short RAP_USHORT_TYPE;

typedef short RAP_SHORT_TYPE;

typedef int RAP_BOOL_TYPE;

typedef float RAP_FLOAT_TYPE;

typedef long RAP_LONG_TYPE;

typedef long RAP_STATUS_TYPE;

typedef char *RAP_STRING_TYPE;

typedef long FILE_DESCRIPTOR;

typedef long RAPVAR_LONG_TYPE;

typedef RAP_USHORT_TYPE RAPVAR_DOMAIN_TYPE;

struct RAPVAR_NAME_TYPE {
	RAP_STRING_TYPE name;
	RAP_STRING_TYPE type;
	RAPVAR_DOMAIN_TYPE domain;
	RAP_SHORT_TYPE number1;
	RAP_SHORT_TYPE number2;
};
typedef struct RAPVAR_NAME_TYPE RAPVAR_NAME_TYPE;


struct RAP_HEAD_TYPE {
	long userdef;
	long data1;
};
typedef struct RAP_HEAD_TYPE RAP_HEAD_TYPE;


typedef RAP_FLOAT_TYPE RAPVAR_NUM_TYPE;

typedef RAP_STRING_TYPE RAPVAR_STRING_TYPE;

typedef RAP_FLOAT_TYPE RAPVAR_BOOL_TYPE;

typedef int RAPVAR_NUMBER_TYPE;

typedef RAP_SHORT_TYPE RAPVAR_SHORT_TYPE;

struct RAPVAR_ARRAY_DIM_TYPE {
	RAPVAR_SHORT_TYPE dimension;
	RAPVAR_SHORT_TYPE elements[6];
};
typedef struct RAPVAR_ARRAY_DIM_TYPE RAPVAR_ARRAY_DIM_TYPE;


struct RAPVAR_CONFDATA_TYPE {
	RAPVAR_NUM_TYPE cf1;
	RAPVAR_NUM_TYPE cf4;
	RAPVAR_NUM_TYPE cf6;
	RAPVAR_NUM_TYPE cfx;
};
typedef struct RAPVAR_CONFDATA_TYPE RAPVAR_CONFDATA_TYPE;


struct RAPVAR_EXTJOINT_TYPE {
	RAPVAR_NUM_TYPE eax_a;
	RAPVAR_NUM_TYPE eax_b;
	RAPVAR_NUM_TYPE eax_c;
	RAPVAR_NUM_TYPE eax_d;
	RAPVAR_NUM_TYPE eax_e;
	RAPVAR_NUM_TYPE eax_f;
};
typedef struct RAPVAR_EXTJOINT_TYPE RAPVAR_EXTJOINT_TYPE;


struct RAPVAR_ORIENT_TYPE {
	RAPVAR_NUM_TYPE q1;
	RAPVAR_NUM_TYPE q2;
	RAPVAR_NUM_TYPE q3;
	RAPVAR_NUM_TYPE q4;
};
typedef struct RAPVAR_ORIENT_TYPE RAPVAR_ORIENT_TYPE;


struct RAPVAR_POS_TYPE {
	RAPVAR_NUM_TYPE x;
	RAPVAR_NUM_TYPE y;
	RAPVAR_NUM_TYPE z;
};
typedef struct RAPVAR_POS_TYPE RAPVAR_POS_TYPE;


struct RAPVAR_POSE_TYPE {
	RAPVAR_POS_TYPE trans;
	RAPVAR_ORIENT_TYPE rot;
};
typedef struct RAPVAR_POSE_TYPE RAPVAR_POSE_TYPE;


struct RAPVAR_ROBTARGET_TYPE {
	RAPVAR_POS_TYPE trans;
	RAPVAR_ORIENT_TYPE rot;
	RAPVAR_CONFDATA_TYPE robconf;
	RAPVAR_EXTJOINT_TYPE extax;
};
typedef struct RAPVAR_ROBTARGET_TYPE RAPVAR_ROBTARGET_TYPE;


struct RAPVAR_SPEEDDATA_TYPE {
	RAPVAR_NUM_TYPE v_tcp;
	RAPVAR_NUM_TYPE v_ori;
	RAPVAR_NUM_TYPE v_leax;
	RAPVAR_NUM_TYPE v_reax;
};
typedef struct RAPVAR_SPEEDDATA_TYPE RAPVAR_SPEEDDATA_TYPE;


struct RAPVAR_WOBJDATA_TYPE {
	RAPVAR_BOOL_TYPE robhold;
	RAPVAR_BOOL_TYPE ufprog;
	RAPVAR_STRING_TYPE ufmec;
	RAPVAR_POSE_TYPE uframe;
	RAPVAR_POSE_TYPE oframe;
};
typedef struct RAPVAR_WOBJDATA_TYPE RAPVAR_WOBJDATA_TYPE;


struct RAPVAR_ZONEDATA_TYPE {
	RAPVAR_BOOL_TYPE finep;
	RAPVAR_NUM_TYPE pzone_tcp;
	RAPVAR_NUM_TYPE pzone_ori;
	RAPVAR_NUM_TYPE pzone_eax;
	RAPVAR_NUM_TYPE zone_ori;
	RAPVAR_NUM_TYPE zone_leax;
	RAPVAR_NUM_TYPE zone_reax;
};
typedef struct RAPVAR_ZONEDATA_TYPE RAPVAR_ZONEDATA_TYPE;


struct RAPVAR_CURR_ROBTARGET_TYPE {
	RAPVAR_ROBTARGET_TYPE robtarget;
	RAPVAR_STRING_TYPE wobj;
	RAPVAR_STRING_TYPE toolobj;
};
typedef struct RAPVAR_CURR_ROBTARGET_TYPE RAPVAR_CURR_ROBTARGET_TYPE;


struct RAPVAR_DATA_TYPE {
	RAPVAR_NUMBER_TYPE var_type;
	union {
		RAPVAR_NUM_TYPE num;
		RAP_LONG_TYPE raplong;
		RAPVAR_STRING_TYPE charstring;
		RAPVAR_BOOL_TYPE boolean;
		RAPVAR_CONFDATA_TYPE confdata;
		RAPVAR_EXTJOINT_TYPE extjoint;
		RAPVAR_ORIENT_TYPE orient;
		RAPVAR_POS_TYPE pos;
		RAPVAR_POSE_TYPE pose;
		RAPVAR_ROBTARGET_TYPE robtarget;
		RAPVAR_SPEEDDATA_TYPE speeddata;
		RAPVAR_WOBJDATA_TYPE wobjdata;
		RAPVAR_ZONEDATA_TYPE zonedata;
		RAPVAR_CURR_ROBTARGET_TYPE robposdata;
	} RAPVAR_DATA_TYPE_u;
};
typedef struct RAPVAR_DATA_TYPE RAPVAR_DATA_TYPE;

struct RAPVAR_XDATA_TYPE {
	struct {
		u_int datacfg_len;
		RAP_FLOAT_TYPE *datacfg_val;
	} datacfg;
	struct {
		u_int numdata_len;
		RAP_FLOAT_TYPE *numdata_val;
	} numdata;
	struct {
		u_int strdata_len;
		RAP_STRING_TYPE *strdata_val;
	} strdata;
};
typedef struct RAPVAR_XDATA_TYPE RAPVAR_XDATA_TYPE;


typedef struct {
	u_int RAPVAR_ARRAY_DATA_TYPE_len;
	RAPVAR_XDATA_TYPE *RAPVAR_ARRAY_DATA_TYPE_val;
} RAPVAR_ARRAY_DATA_TYPE;

struct RAPVAR_READ_NAME_REQ_TYPE {
	RAP_HEAD_TYPE head;
	RAPVAR_NAME_TYPE var;
};
typedef struct RAPVAR_READ_NAME_REQ_TYPE RAPVAR_READ_NAME_REQ_TYPE;


struct RAPVAR_READ_NAME_RESPX_TYPE {
	RAP_STATUS_TYPE status;
	union {
		RAPVAR_DATA_TYPE data;
	} RAPVAR_READ_NAME_RESPX_TYPE_u;
};
typedef struct RAPVAR_READ_NAME_RESPX_TYPE RAPVAR_READ_NAME_RESPX_TYPE;


struct RAPVAR_READ_NAME_RESP_TYPE {
	RAP_HEAD_TYPE head;
	RAPVAR_READ_NAME_RESPX_TYPE resp;
};
typedef struct RAPVAR_READ_NAME_RESP_TYPE RAPVAR_READ_NAME_RESP_TYPE;


struct RAPVAR_WRITE_NAME_REQ_TYPE {
	RAP_HEAD_TYPE head;
	RAPVAR_NAME_TYPE var;
	RAPVAR_DATA_TYPE data;
};
typedef struct RAPVAR_WRITE_NAME_REQ_TYPE RAPVAR_WRITE_NAME_REQ_TYPE;


struct RAPVAR_WRITE_NAME_RESP_TYPE {
	RAP_HEAD_TYPE head;
	RAP_STATUS_TYPE status;
};
typedef struct RAPVAR_WRITE_NAME_RESP_TYPE RAPVAR_WRITE_NAME_RESP_TYPE;


struct RAPVAR_READ_NAME_ARRAY_REQ_TYPE {
	RAP_HEAD_TYPE head;
	RAPVAR_NAME_TYPE var;
	RAPVAR_ARRAY_DIM_TYPE dim;
};
typedef struct RAPVAR_READ_NAME_ARRAY_REQ_TYPE RAPVAR_READ_NAME_ARRAY_REQ_TYPE;


struct RAPVAR_READ_NAME_ARRAY_RESPX_TYPE {
	RAP_STATUS_TYPE status;
	union {
		RAPVAR_ARRAY_DATA_TYPE data;
	} RAPVAR_READ_NAME_ARRAY_RESPX_TYPE_u;
};
typedef struct RAPVAR_READ_NAME_ARRAY_RESPX_TYPE RAPVAR_READ_NAME_ARRAY_RESPX_TYPE;


struct RAPVAR_READ_NAME_ARRAY_RESP_TYPE {
	RAP_HEAD_TYPE head;
	RAPVAR_READ_NAME_ARRAY_RESPX_TYPE resp;
};
typedef struct RAPVAR_READ_NAME_ARRAY_RESP_TYPE RAPVAR_READ_NAME_ARRAY_RESP_TYPE;


struct RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE {
	RAP_HEAD_TYPE head;
	RAPVAR_NAME_TYPE var;
	RAPVAR_ARRAY_DIM_TYPE dim;
	RAPVAR_ARRAY_DATA_TYPE data;
};
typedef struct RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE;


struct RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE {
	RAP_HEAD_TYPE head;
	RAP_STATUS_TYPE status;
};
typedef struct RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE;


#define OTHER_SERVICES 300456
#define OTHER_SERVICES_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define rapvar_read_name 1001
extern  RAPVAR_READ_NAME_RESP_TYPE * rapvar_read_name_1(RAPVAR_READ_NAME_REQ_TYPE *, CLIENT *);
extern  RAPVAR_READ_NAME_RESP_TYPE * rapvar_read_name_1_svc(RAPVAR_READ_NAME_REQ_TYPE *, struct svc_req *);
#define rapvar_write_name 1002
extern  RAPVAR_WRITE_NAME_RESP_TYPE * rapvar_write_name_1(RAPVAR_WRITE_NAME_REQ_TYPE *, CLIENT *);
extern  RAPVAR_WRITE_NAME_RESP_TYPE * rapvar_write_name_1_svc(RAPVAR_WRITE_NAME_REQ_TYPE *, struct svc_req *);
#define rapvar_read_name_array 1004
extern  RAPVAR_READ_NAME_ARRAY_RESP_TYPE * rapvar_read_name_array_1(RAPVAR_READ_NAME_ARRAY_REQ_TYPE *, CLIENT *);
extern  RAPVAR_READ_NAME_ARRAY_RESP_TYPE * rapvar_read_name_array_1_svc(RAPVAR_READ_NAME_ARRAY_REQ_TYPE *, struct svc_req *);
#define rapvar_write_name_array 1005
extern  RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE * rapvar_write_name_array_1(RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE *, CLIENT *);
extern  RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE * rapvar_write_name_array_1_svc(RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE *, struct svc_req *);
extern int other_services_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define rapvar_read_name 1001
extern  RAPVAR_READ_NAME_RESP_TYPE * rapvar_read_name_1();
extern  RAPVAR_READ_NAME_RESP_TYPE * rapvar_read_name_1_svc();
#define rapvar_write_name 1002
extern  RAPVAR_WRITE_NAME_RESP_TYPE * rapvar_write_name_1();
extern  RAPVAR_WRITE_NAME_RESP_TYPE * rapvar_write_name_1_svc();
#define rapvar_read_name_array 1004
extern  RAPVAR_READ_NAME_ARRAY_RESP_TYPE * rapvar_read_name_array_1();
extern  RAPVAR_READ_NAME_ARRAY_RESP_TYPE * rapvar_read_name_array_1_svc();
#define rapvar_write_name_array 1005
extern  RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE * rapvar_write_name_array_1();
extern  RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE * rapvar_write_name_array_1_svc();
extern int other_services_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_RAP_BYTE_TYPE (XDR *, RAP_BYTE_TYPE*);
extern  bool_t xdr_RAP_USHORT_TYPE (XDR *, RAP_USHORT_TYPE*);
extern  bool_t xdr_RAP_SHORT_TYPE (XDR *, RAP_SHORT_TYPE*);
extern  bool_t xdr_RAP_BOOL_TYPE (XDR *, RAP_BOOL_TYPE*);
extern  bool_t xdr_RAP_FLOAT_TYPE (XDR *, RAP_FLOAT_TYPE*);
extern  bool_t xdr_RAP_LONG_TYPE (XDR *, RAP_LONG_TYPE*);
extern  bool_t xdr_RAP_STATUS_TYPE (XDR *, RAP_STATUS_TYPE*);
extern  bool_t xdr_RAP_STRING_TYPE (XDR *, RAP_STRING_TYPE*);
extern  bool_t xdr_FILE_DESCRIPTOR (XDR *, FILE_DESCRIPTOR*);
extern  bool_t xdr_RAPVAR_LONG_TYPE (XDR *, RAPVAR_LONG_TYPE*);
extern  bool_t xdr_RAPVAR_DOMAIN_TYPE (XDR *, RAPVAR_DOMAIN_TYPE*);
extern  bool_t xdr_RAPVAR_NAME_TYPE (XDR *, RAPVAR_NAME_TYPE*);
extern  bool_t xdr_RAPVAR_NAME_TYPE (XDR *, RAPVAR_NAME_TYPE*);
extern  bool_t xdr_RAP_HEAD_TYPE (XDR *, RAP_HEAD_TYPE*);
extern  bool_t xdr_RAP_HEAD_TYPE (XDR *, RAP_HEAD_TYPE*);
extern  bool_t xdr_RAPVAR_NUM_TYPE (XDR *, RAPVAR_NUM_TYPE*);
extern  bool_t xdr_RAPVAR_STRING_TYPE (XDR *, RAPVAR_STRING_TYPE*);
extern  bool_t xdr_RAPVAR_BOOL_TYPE (XDR *, RAPVAR_BOOL_TYPE*);
extern  bool_t xdr_RAPVAR_NUMBER_TYPE (XDR *, RAPVAR_NUMBER_TYPE*);
extern  bool_t xdr_RAPVAR_SHORT_TYPE (XDR *, RAPVAR_SHORT_TYPE*);
extern  bool_t xdr_RAPVAR_ARRAY_DIM_TYPE (XDR *, RAPVAR_ARRAY_DIM_TYPE*);
extern  bool_t xdr_RAPVAR_ARRAY_DIM_TYPE (XDR *, RAPVAR_ARRAY_DIM_TYPE*);
extern  bool_t xdr_RAPVAR_CONFDATA_TYPE (XDR *, RAPVAR_CONFDATA_TYPE*);
extern  bool_t xdr_RAPVAR_CONFDATA_TYPE (XDR *, RAPVAR_CONFDATA_TYPE*);
extern  bool_t xdr_RAPVAR_EXTJOINT_TYPE (XDR *, RAPVAR_EXTJOINT_TYPE*);
extern  bool_t xdr_RAPVAR_EXTJOINT_TYPE (XDR *, RAPVAR_EXTJOINT_TYPE*);
extern  bool_t xdr_RAPVAR_ORIENT_TYPE (XDR *, RAPVAR_ORIENT_TYPE*);
extern  bool_t xdr_RAPVAR_ORIENT_TYPE (XDR *, RAPVAR_ORIENT_TYPE*);
extern  bool_t xdr_RAPVAR_POS_TYPE (XDR *, RAPVAR_POS_TYPE*);
extern  bool_t xdr_RAPVAR_POS_TYPE (XDR *, RAPVAR_POS_TYPE*);
extern  bool_t xdr_RAPVAR_POSE_TYPE (XDR *, RAPVAR_POSE_TYPE*);
extern  bool_t xdr_RAPVAR_POSE_TYPE (XDR *, RAPVAR_POSE_TYPE*);
extern  bool_t xdr_RAPVAR_ROBTARGET_TYPE (XDR *, RAPVAR_ROBTARGET_TYPE*);
extern  bool_t xdr_RAPVAR_ROBTARGET_TYPE (XDR *, RAPVAR_ROBTARGET_TYPE*);
extern  bool_t xdr_RAPVAR_SPEEDDATA_TYPE (XDR *, RAPVAR_SPEEDDATA_TYPE*);
extern  bool_t xdr_RAPVAR_SPEEDDATA_TYPE (XDR *, RAPVAR_SPEEDDATA_TYPE*);
extern  bool_t xdr_RAPVAR_WOBJDATA_TYPE (XDR *, RAPVAR_WOBJDATA_TYPE*);
extern  bool_t xdr_RAPVAR_WOBJDATA_TYPE (XDR *, RAPVAR_WOBJDATA_TYPE*);
extern  bool_t xdr_RAPVAR_ZONEDATA_TYPE (XDR *, RAPVAR_ZONEDATA_TYPE*);
extern  bool_t xdr_RAPVAR_ZONEDATA_TYPE (XDR *, RAPVAR_ZONEDATA_TYPE*);
extern  bool_t xdr_RAPVAR_CURR_ROBTARGET_TYPE (XDR *, RAPVAR_CURR_ROBTARGET_TYPE*);
extern  bool_t xdr_RAPVAR_CURR_ROBTARGET_TYPE (XDR *, RAPVAR_CURR_ROBTARGET_TYPE*);
extern  bool_t xdr_RAPVAR_DATA_TYPE (XDR *, RAPVAR_DATA_TYPE*);
extern  bool_t xdr_RAPVAR_XDATA_TYPE (XDR *, RAPVAR_XDATA_TYPE*);
extern  bool_t xdr_RAPVAR_XDATA_TYPE (XDR *, RAPVAR_XDATA_TYPE*);
extern  bool_t xdr_RAPVAR_ARRAY_DATA_TYPE (XDR *, RAPVAR_ARRAY_DATA_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_REQ_TYPE (XDR *, RAPVAR_READ_NAME_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_REQ_TYPE (XDR *, RAPVAR_READ_NAME_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_RESPX_TYPE (XDR *, RAPVAR_READ_NAME_RESPX_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_RESPX_TYPE (XDR *, RAPVAR_READ_NAME_RESPX_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_RESP_TYPE (XDR *, RAPVAR_READ_NAME_RESP_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_RESP_TYPE (XDR *, RAPVAR_READ_NAME_RESP_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_REQ_TYPE (XDR *, RAPVAR_WRITE_NAME_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_REQ_TYPE (XDR *, RAPVAR_WRITE_NAME_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_RESP_TYPE (XDR *, RAPVAR_WRITE_NAME_RESP_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_RESP_TYPE (XDR *, RAPVAR_WRITE_NAME_RESP_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_ARRAY_REQ_TYPE (XDR *, RAPVAR_READ_NAME_ARRAY_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_ARRAY_REQ_TYPE (XDR *, RAPVAR_READ_NAME_ARRAY_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESPX_TYPE (XDR *, RAPVAR_READ_NAME_ARRAY_RESPX_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESPX_TYPE (XDR *, RAPVAR_READ_NAME_ARRAY_RESPX_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESP_TYPE (XDR *, RAPVAR_READ_NAME_ARRAY_RESP_TYPE*);
extern  bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESP_TYPE (XDR *, RAPVAR_READ_NAME_ARRAY_RESP_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE (XDR *, RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE (XDR *, RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE (XDR *, RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE*);
extern  bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE (XDR *, RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE*);

#else /* K&R C */
extern bool_t xdr_RAP_BYTE_TYPE ();
extern bool_t xdr_RAP_USHORT_TYPE ();
extern bool_t xdr_RAP_SHORT_TYPE ();
extern bool_t xdr_RAP_BOOL_TYPE ();
extern bool_t xdr_RAP_FLOAT_TYPE ();
extern bool_t xdr_RAP_LONG_TYPE ();
extern bool_t xdr_RAP_STATUS_TYPE ();
extern bool_t xdr_RAP_STRING_TYPE ();
extern bool_t xdr_FILE_DESCRIPTOR ();
extern bool_t xdr_RAPVAR_LONG_TYPE ();
extern bool_t xdr_RAPVAR_DOMAIN_TYPE ();
extern bool_t xdr_RAPVAR_NAME_TYPE ();
extern bool_t xdr_RAPVAR_NAME_TYPE ();
extern bool_t xdr_RAP_HEAD_TYPE ();
extern bool_t xdr_RAP_HEAD_TYPE ();
extern bool_t xdr_RAPVAR_NUM_TYPE ();
extern bool_t xdr_RAPVAR_STRING_TYPE ();
extern bool_t xdr_RAPVAR_BOOL_TYPE ();
extern bool_t xdr_RAPVAR_NUMBER_TYPE ();
extern bool_t xdr_RAPVAR_SHORT_TYPE ();
extern bool_t xdr_RAPVAR_ARRAY_DIM_TYPE ();
extern bool_t xdr_RAPVAR_ARRAY_DIM_TYPE ();
extern bool_t xdr_RAPVAR_CONFDATA_TYPE ();
extern bool_t xdr_RAPVAR_CONFDATA_TYPE ();
extern bool_t xdr_RAPVAR_EXTJOINT_TYPE ();
extern bool_t xdr_RAPVAR_EXTJOINT_TYPE ();
extern bool_t xdr_RAPVAR_ORIENT_TYPE ();
extern bool_t xdr_RAPVAR_ORIENT_TYPE ();
extern bool_t xdr_RAPVAR_POS_TYPE ();
extern bool_t xdr_RAPVAR_POS_TYPE ();
extern bool_t xdr_RAPVAR_POSE_TYPE ();
extern bool_t xdr_RAPVAR_POSE_TYPE ();
extern bool_t xdr_RAPVAR_ROBTARGET_TYPE ();
extern bool_t xdr_RAPVAR_ROBTARGET_TYPE ();
extern bool_t xdr_RAPVAR_SPEEDDATA_TYPE ();
extern bool_t xdr_RAPVAR_SPEEDDATA_TYPE ();
extern bool_t xdr_RAPVAR_WOBJDATA_TYPE ();
extern bool_t xdr_RAPVAR_WOBJDATA_TYPE ();
extern bool_t xdr_RAPVAR_ZONEDATA_TYPE ();
extern bool_t xdr_RAPVAR_ZONEDATA_TYPE ();
extern bool_t xdr_RAPVAR_CURR_ROBTARGET_TYPE ();
extern bool_t xdr_RAPVAR_CURR_ROBTARGET_TYPE ();
extern bool_t xdr_RAPVAR_DATA_TYPE ();
extern bool_t xdr_RAPVAR_XDATA_TYPE ();
extern bool_t xdr_RAPVAR_XDATA_TYPE ();
extern bool_t xdr_RAPVAR_ARRAY_DATA_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_REQ_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_REQ_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_RESPX_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_RESPX_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_RESP_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_RESP_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_REQ_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_REQ_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_RESP_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_RESP_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_ARRAY_REQ_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_ARRAY_REQ_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESPX_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESPX_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESP_TYPE ();
extern bool_t xdr_RAPVAR_READ_NAME_ARRAY_RESP_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_REQ_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE ();
extern bool_t xdr_RAPVAR_WRITE_NAME_ARRAY_RESP_TYPE ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RAP_H_RPCGEN */
