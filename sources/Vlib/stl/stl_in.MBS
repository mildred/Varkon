!*******************************************************

  GLOBAL GEOMETRY MODULE stl_in(
  STRING fname*132      >"Enter name of STL-file:";
  FLOAT  X_scale:=1.0   > "Scale X:";
  FLOAT  Y_scale:=1.0   > "Scale Y:";
  FLOAT  Z_scale:=1.0   > "Scale Z:";
  STRING reverse*1:="n" >"Reverse normals ? (y/n)";
  FLOAT  acc:=0.01      > "Accuracy";
  INT    color:=1       > "Color:");

!*      Reads ASCII-formatted STL-file.
!*      version 2.1
!*      with admesh check and stl ascii only.
!*      with translated MBS code in LOG_STL.MBS
!*      no binary STL files accepted (yet).
!*
!*      (C)microform ab 1998-09-11 J. Kjellander
!*      (C) Kastalyse   2000-05-19 R. Kastelein
!*      ADMESH checking program added.
!*      STL translated code in LOG file added.
!*
!*
!*******************************************************

 INT    dec;           ! Decimals to write vectors in logfile.
 FILE   f;             ! Pointer to STL-file
 STRING f_original*132;   ! name of original STL-file
 FILE   logfil;        ! Log-file
 INT    status;        ! Error code
 STRING path*132;      ! Path to STL-file
 STRING line*132;      ! Line read
 VECTOR p1,p2,p3;      ! Vertex coordinates
 INT    n;             ! Character count
 INT    nf;            ! Facet count
 INT    f_type;	       ! File type (-1 = Error , 0 = ascii , 1 = binary)
 VECTOR swap;          ! For normal reversal


 BEGINMODULE
 
 if ACC > 1 then
   dec:=0;
 else
   dec:=round(abs(log(ACC)));
 endif;
 if dec > 2 then 
   dec:=2;     !* it seems to crash when accuracy is too high! Sorry.
 endif;

!*
!***Initialization.
!*f_original
   set(pen=color);
   nf:=0;
   f_original:=fname;
!*
!***Open Log file.
!*
   open(logfil,"W",act_jobdir()+"LOG_STL.MBS");
   outlin(logfil);
   outstr(logfil,"!* STL-logfile generated by module stl_in.");
   outlin(logfil);
   outstr(logfil,"!* Jobname: "+act_jobnam());
   outlin(logfil);
!*
!***Create complete path and check accessibility.
!*
   status:=0;
   
   part(#1,stl_fnam(fname,path,status):SAVE=0);

   if status < 0 then
     outstr(logfil,"!* Error found by stl_in: Can't access "+path+" !");
     outlin(logfil);
     close(logfil);
     exit("Can't access "+path+" !");
   else
     open(f,"R",path);
   endif;
!*
!*** Check if file format is ASCII.
!*
   f_type:=-1;
   line:=inlin(f);
   if iostat(f) = 0 then
     if finds(line,"solid")<>0 or finds(line,"SOLID")<>0 then
       f_type:=0;           !** ASCII
       outstr(logfil,"!* Ascii STL-file: "+fname);
       outlin(logfil);
     else
!*
!*** Check if file format is BINARY
!*
       close(f);
       open(f,"R",path);
       inbin(f,fname,80);
       if iostat(f)=0 then
         f_type:=1;         !** BIN
         outstr(logfil,"!* Binary STL-file: "+fname);
         outlin(logfil);     
       endif;
     endif;
   else
     outstr(logfil,"!* Error in stl_in: can't read STL-file !");
     outlin(logfil);     
     close (f);  
     close (logfil);  
     exit("Sorry, can't read STL-file !");      
   endif;
   close (f);  
!*
!***Write Header to logfile.
!*
   outlin(logfil);
   outstr(logfil,"!* scaling factors: ");
   outlin(logfil);
   outstr(logfil,"!* X: "+str(X_scale,-1,2));
   outlin(logfil);
   outstr(logfil,"!* Y: "+str(Y_scale,-1,2));
   outlin(logfil);
   outstr(logfil,"!* Z: "+str(Z_scale,-1,2));
   outlin(logfil);
   outstr(logfil,"!* vector normals are ");
   if reverse="n" or reverse="N" then
      outstr(logfil,"NOT ");
   endif;
   outstr(logfil,"inversed.");
   outlin(logfil);
   outstr(logfil,"!* accuracy is "+str(dec,-1,0)+" digits behind decimal point.");
   outlin(logfil);
   outlin(logfil);   
   outstr(logfil,"LOCAL GEOMETRY MODULE LOG_STL();");
   outlin(logfil);
   outlin(logfil);
   outstr(logfil,"BEGINMODULE");
   outlin(logfil);
   outlin(logfil);
   outstr(logfil,"set(pen="+str(color,-1,0)+");");
   outlin(logfil);
!*
!*** Start Reading, Drawing and Converting STL-file.
!*
   open(f,"R",path);
   if f_type = 0 then    !** ASCII 
     psh_pmt("Reading ascii STL-file "+path);
     part(#2,stl_ina(f,logfil,X_scale,Y_scale,Z_scale,reverse,DEC,color):SAVE=1);
   else                  !** BIN
     psh_pmt("Reading binary STL-file "+path);                            
     part(#3,stl_inb(f,logfil,X_scale,Y_scale,Z_scale,reverse,DEC,color):SAVE=1);
   endif;
!*
!***Write End and close logfile.
!*
   outlin(logfil);
   outstr(logfil,"ENDMODULE");
   outlin(logfil);
   close(logfil);
!*
!***End
!*
 ENDMODULE

!*******************************************************


