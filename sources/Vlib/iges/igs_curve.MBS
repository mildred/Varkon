!*******************************************************

 LOCAL GEOMETRY MODULE igs_curve(
   VAR FILE infile,logfile;
   STRING   dl1*80,dl2*80;
   INT      ds_ptr;
   INT      ps_ptr;
   INT      rowlgt;
   VAR REF  id_ent;
   VAR INT  status);

!*      Read Directory Entry Section and
!*      get values from Parameter Section
!*      and create a curve of any type, incl. line
!*
!*      In: infil   = File to read from.
!*          logfil  = Logfile.
!*          dl1     = Read 1st Directory Entry Section.
!*          dl2     = Read 2nd Directory Entry Section.
!*          ds_ptr  = Pointer to Directory entr section 
!*          ps_ptr  = Pointer to Parameter Section.
!*          rowlgt  = Length of rows
!*
!*      Out: id_ent = Identity of created curve or line
!            status = 0 => Ok
!*                   -1 => Error
!*
!*      (c)2006-09-13, Sören Larsson, Örebro university
!*
!*******************************************************

   INT    i,radnummer,pd,t_ptr;
   FLOAT  f;
   INT    curtyp,actpos;
   REF    csysid;
   STRING row1*132,row2*132;
   
 BEGINMODULE
 
   status:=0;
   curtyp:=ival(dl1); 
!*
!**Create local coordinate system for transformation matrix.
!*    
     csys_1p(#7,"LOCAL",vec(0,0,0),0,0,0:BLANK=1);    
     csysid:=#7;     
!*
!**Creat curve. 
!*  
   IF curtyp = 100 THEN
     part(#1,igs_100(infile,logfile,dl1,dl2,ps_ptr,rowlgt,id_ent,status),csysid:SAVE=1);
         
   elif curtyp = 102 then
      part(#2,igs_102(infile,logfile,dl1,dl2,ps_ptr,ds_ptr,rowlgt,id_ent,status),csysid:SAVE=1);      
    
   elif curtyp = 110 then
      part(#4,igs_110(infile,logfile,dl1,dl2,ps_ptr,rowlgt,id_ent,status),csysid:SAVE=1);
      
   elif curtyp = 112 then
      part(#5,igs_112(infile,logfile,dl1,dl2,ps_ptr,rowlgt,id_ent,status),csysid:SAVE=1);
                
   elif curtyp = 126 then
      part(#6,igs_126(infile,logfile,dl1,dl2,ps_ptr,rowlgt,id_ent,status),csysid:SAVE=1); 
      
    !!! --- TODO: add more curve types ----  !!!
   ELSE
   
     outlin(logfile);
     outstr(logfile,"igs_curve, entity refers to not implemented curve type: "+ str(curtyp,1,0));
     outlin(logfile);
     outstr(logfile,dl1);
     outlin(logfile);
     outstr(logfile,dl2);
     outlin(logfile);
     outlin(logfile);
     status:=-1;
     id_ent:=##0;
     exit();
   ENDIF;
!*
!***End.
!*

 ENDMODULE

!*******************************************************************************